plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'com.gradle.plugin-publish' version '0.12.0'
    id "com.jfrog.bintray" version "1.8.5"
    id "maven-publish"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation "com.twilio:guardrail_2.12:0.60.0"
    testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
        exclude module: 'groovy-all'
    }
    testImplementation 'cglib:cglib-nodep:3.3.0'
}

group = 'com.twilio.guardrail.gradle.plugin'

version = project.hasProperty('releaseVersion')
    ? project.releaseVersion
    : '1.0.0-SNAPSHOT'

description = 'Twilio Guardrail Generator Plugin'

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
    extension "jar"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier "javadoc"
    extension "jar"
}

publishing {
    publications {
        mainMaven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    // dryRun = true
    // publish = true
    user = project.hasProperty("bintrayUserName") ? bintrayUserName : null
    key = project.hasProperty("bintrayApiKey") ? bintrayApiKey : null
    publications = ["mainMaven", "guardrailPluginMarkerMaven"]
    pkg {
        repo = "releases"
        name = project.name
        //userOrg = "twilio"
        licenses = ["MIT"]
        desc = "Twilio Guardrail Generator Plugin"
        websiteUrl = "https://github.com/twilio/guardrail-gradle-plugin"
        issueTrackerUrl = 'https://github.com/twilio/guardrail-gradle-plugin/issues'
        vcsUrl = "https://github.com/twilio/guardrail-gradle-plugin"
        labels = ['twilio', 'api', 'generator']
        githubRepo = "twilio/guardrail-gradle-plugin"
        version {
            name = project.version
            vcsTag = project.version
            gpg {
                sign = true
            }
        }
    }
}

bintrayUpload.dependsOn build, { generatePomFileForGuardrailPluginMarkerMavenPublication }

gradlePlugin {
    plugins {
        guardrail {
            id = project.group
            implementationClass = 'com.twilio.guardrail.GuardrailGradlePlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}
