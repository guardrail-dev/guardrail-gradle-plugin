/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package dev.guardrail

import spock.lang.Specification
import org.gradle.testkit.runner.GradleRunner

class GuardrailGradlePluginFunctionalTest extends Specification {
    def setup() {
        file('functionalTest').deleteDir()
    }

    def 'generate java and compile'() {
        given:
        def projectDir = new File("build/functionalTest")
        projectDir.mkdirs()
        def resourceDirs = new File("build/functionalTest/src/main/resources")
        resourceDirs.mkdirs()
        def sourceDirs = new File("build/functionalTest/src/main/java/example")
        sourceDirs.mkdirs()
        new File(projectDir, "settings.gradle") << ""
        new File(projectDir, "build.gradle") << """
plugins {
    id('dev.guardrail')
}

guardrail {
    petstoreServer {
        inputFile = file('src/main/resources/pet_store_v2.yml')
        gen {
            packageName = 'com.foobar.generated.petstore.server'
            kind = 'server'
            language = 'java'
            framework = 'dropwizard'
        }
    }
    petstoreClient {
        inputFile = file('src/main/resources/pet_store_v3.yml')
        gen {
            packageName = 'com.foobar.generated.petstore.client'
            language = 'scala'
            framework = 'http4s'
            kind = 'client'
        } 
    }
}"""

        new File(resourceDirs, "pet_store_v2.yml") <<
            this.getClass().getResource("/pet_store_v2.yml").text

        new File(resourceDirs, "pet_store_v3.yml") <<
            this.getClass().getResource("/pet_store_v3.yml").text

        when:
        def runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("guardrail")
        runner.withProjectDir(projectDir)
        def result = runner.build()

        then:
        !result.output.contains("Error")

        [
            file('functionalTest/build/guardrail-sources/scala/com/foobar/generated/petstore/client/pets'),
            file('functionalTest/build/guardrail-sources/java/com/foobar/generated/petstore/server/pet')
        ].each {
            it.exists()
            it.directorySize() > 0
        }
    }

    File file(String name) {
        new File("build", name)
    }


}
